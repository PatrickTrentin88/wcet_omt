###                                           ###
### resource location                         ###
###                                           ###

WCET_OMT_DIR	:= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))
WCET_RUN		:= $(WCET_OMT_DIR)/bin/run_experiment.sh
WCET_SETUP		:= $(WCET_OMT_DIR)/bin/setup_tools/setup_env.sh
WCET_TOOLS_DIR	:= $(WCET_OMT_DIR)/tools

###                                           ###
### Nothing below here should require editing ###
### Please edit the `Makefile` in the target  ###
### benchmark directory instead.              ###
###                                           ###

WCET_TIMEOUT		?= 60
# seconds, 0: disabled
WCET_DEBUG      	?= 1
# 0: do nothing, 1: print extra debug information
WCET_OVERWRITE  	?= 1
# overwrite level:
# 0 : overwrite all files
# 1 : do not overwrite any file except those generated by omt solvers
# 2 : do not overwrite any file except result statistics
WCET_UNROLL     	?= 0
# 0 : do nothing, 1: attempt loop unroll
WCET_MERGE      	?= 0
# 0 : each `.c` in a directory is separately handled
# 1 : all `.c` in a directory are merged in a single bytecode
WCET_REPEAT			?= 0
# 0 : execute each handler once with default configurations
# N > 0 : execute the handler N times over the same
#		  formula with a different random seed taken
#		  from a fixed list
WCET_USE_EMATCHES   ?= 0
# 0 : ignored
# 1 : use edge's costs in `<file>.edges.match` instead of block costs

WCET_RUN_FLAGS		:= -f -s $(WCET_OVERWRITE)
# -f   : print general information
# -s N : overwrite level

WCET_RUN_FLAGS		+= -t $(WCET_TIMEOUT)
# -t N : timeout

ifeq ($(WCET_DEBUG), 1)
	WCET_RUN_FLAGS	+= -c -w
	# debug:
	# -c   : print calls to external commands
	# -w   : print warnings
endif

ifeq ($(WCET_UNROLL), 1)
	WCET_RUN_FLAGS  += -u
	# -u   : attempt unrolling loops
endif

ifeq ($(WCET_MERGE), 1)
	WCET_RUN_FLAGS  += -m
	# -m   : all `.c` files in a directory are merged
endif

DO_REPEAT := $(shell [ $(WCET_REPEAT) -gt 0 ] && echo 1 || echo 0 )
ifeq ($(DO_REPEAT), 1)
	WCET_RUN_FLAGS  += -z $(WCET_REPEAT)
	# -z N : execute benchmark handler N times
	#        over the same smt2 formula with
	#		 random seed
endif

ifeq ($(WCET_USE_EMATCHES), 1)
	WCET_RUN_FLAGS  += -e
	# -e   : set costs over edges instead of blocks,
	#		 values are read from <file>.edges.match
endif

WCET_SETUP_FLAGS	:= -f -c -w
# default:
# -f   : print general information
# -c   : print calls to external commands
# -w   : print warnings

WCET_BENCH_DIR		:= $(WCET_OMT_DIR)/test/bench
# default benchmarks directory
WCET_STATS_DIR		:= $(WCET_OMT_DIR)/test/stats/bench
# default statistics directory

###                                           ###
###                                           ###
###                                           ###

# commands
MKDIR = mkdir -p
RM    = rm -rfv
MV    = mv -f
LN    = ln -f

#defs
define run-experiment
	@ $(MKDIR) $(WCET_STATS_DIR)
	@ $(WCET_RUN) $(strip $(WCET_RUN_FLAGS)) $(strip $(WCET_BENCH_DIR)) $(strip $(WCET_STATS_DIR)) $%
endef

# rules
.PHONY : default install clean default_all version

default : ;

install :
	@ $(WCET_SETUP) $(WCET_SETUP_FLAGS)

version :
	@ $(WCET_RUN) -f -v

default_all : \
	z3_0 \
	z3_0_cuts \
	smtopt_0 \
	smtopt_0_cuts \
	optimathsat_0 \
	optimathsat_0_cuts \
	optimathsat_1_sn \
	optimathsat_1_cuts_sn \
	optimathsat_2 \
	optimathsat_2_cuts \
	optimathsat_2_dl_1 \
	optimathsat_2_cuts_dl_1 \
#	optimathsat_2_dl_2 \
#	optimathsat_2_cuts_dl_2 \
#	optimathsat_2_dl_3 \
#	optimathsat_2_cuts_dl_3

z3_0:
	$(run-experiment) $@
z3_0_cuts:
	$(run-experiment) $@
smtopt_0:
	$(run-experiment) $@
smtopt_0_cuts:
	$(run-experiment) $@
optimathsat_0:
	$(run-experiment) $@
optimathsat_0_cuts:
	$(run-experiment) $@
optimathsat_1_sn:
	$(run-experiment) $@
optimathsat_1_cuts_sn:
	$(run-experiment) $@
optimathsat_2:
	$(run-experiment) $@
optimathsat_2_cuts:
	$(run-experiment) $@
optimathsat_2_dl_1:
	$(run-experiment) $@
optimathsat_2_cuts_dl_1:
	$(run-experiment) $@
optimathsat_2_dl_2:
	$(run-experiment) $@
optimathsat_2_cuts_dl_2:
	$(run-experiment) $@
optimathsat_2_dl_3:
	$(run-experiment) $@
optimathsat_2_cuts_dl_3:
	$(run-experiment) $@

clean :
	@ $(WCET_RUN) -r $(strip $(WCET_BENCH_DIR))

print-% : ; $(info $* is $(flavor $*) variable set to [$($*)]) @true

